import { type NextRequest, NextResponse } from "next/server"

export async function POST(request: NextRequest) {
  try {
    const body = await request.json()
    const { itinerary, destination } = body

    // In a real implementation, you would use a PDF generation library like jsPDF or Puppeteer
    // For now, we'll create a structured text version that can be downloaded

    const pdfContent = generatePDFContent(itinerary, destination)

    // Create a simple text-based "PDF" for demonstration
    const buffer = Buffer.from(pdfContent, "utf-8")

    return new NextResponse(buffer, {
      headers: {
        "Content-Type": "application/pdf",
        "Content-Disposition": `attachment; filename="${destination}-itinerary.txt"`,
      },
    })
  } catch (error) {
    console.error("Error generating PDF:", error)
    return NextResponse.json({ error: "Failed to generate PDF" }, { status: 500 })
  }
}

function generatePDFContent(itinerary: any, destination: string): string {
  const totalCost = itinerary.days.reduce(
    (total: number, day: any) =>
      total + day.activities.reduce((dayTotal: number, activity: any) => dayTotal + activity.cost, 0),
    0,
  )

  let content = `
TRAVEL ITINERARY
${itinerary.title}
Generated on: ${new Date().toLocaleDateString()}

TRIP OVERVIEW
Destination: ${destination}
Duration: ${itinerary.days.length} days
Budget: $${itinerary.totalBudget}
Estimated Cost: $${totalCost}

DAILY ITINERARY
`

  itinerary.days.forEach((day: any) => {
    content += `
DAY ${day.day} - ${day.date}
${"-".repeat(30)}
`
    day.activities.forEach((activity: any) => {
      content += `
${activity.time} - ${activity.activity}
Cost: $${activity.cost}
${activity.description}
`
    })
  })

  content += `

RECOMMENDATIONS
${"-".repeat(30)}

Accommodation:
${itinerary.recommendations.accommodation}

Transportation:
${itinerary.recommendations.transportation}

Pro Tips:
${itinerary.recommendations.tips.map((tip: string, index: number) => `${index + 1}. ${tip}`).join("\n")}

---
Generated by AI Travel Planner
`

  return content
}
